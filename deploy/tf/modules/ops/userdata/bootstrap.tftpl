#!/bin/bash

touch /home/opc/bootstrap.lock

# Update and upgrade repo
dnf update -y
dnf upgrade -y
dnf install ansible -y

#Â Get the DB wallet
curl "${db_wallet_par_full_path}" -o /home/opc/wallet.zip.b64
base64 -d /home/opc/wallet.zip.b64 > /home/opc/wallet.zip && rm /home/opc/wallet.zip.b64
mkdir -p /home/opc/wallet
unzip /home/opc/wallet.zip -d /home/opc/wallet
chown -R opc:opc /home/opc/wallet
chown -R opc:opc /home/opc/wallet.zip

# Get ansible_ops
curl "${ansible_ops_par_full_path}" -o /home/opc/ansible_ops.zip
mkdir -p /home/opc/ansible_ops
unzip /home/opc/ansible_ops.zip -d /home/opc/ansible_ops && \
    rm /home/opc/ansible_ops.zip
chown -R opc:opc /home/opc/ansible_ops

# Creating private.key
cat <<EOT >> /home/opc/private.key
${private_key_content}
EOT
chown opc:opc /home/opc/private.key
chmod 400 /home/opc/private.key

cat <<EOT >> /home/opc/ansible_params.json
{
  "project_name": "${project_name}",
  "db_service_name": "${db_service_name}",
  "db_admin_password": "${db_admin_password}",
  "backend_private_ip": "${backend_private_ip}",
  "region_name": "${region_name}"
}
EOT
chown opc:opc /home/opc/ansible_params.json

cat <<EOT >> /home/opc/ops.ini
[ops]
localhost ansible_connection=local ansible_user=root

[ops:vars]
ansible_python_interpreter="/usr/bin/python3"
EOT
chown opc:opc /home/opc/ops.ini

touch /home/opc/ansible-playbook.log
chown opc:opc /home/opc/ansible-playbook.log

ANSIBLE_PYTHON_INTERPRETER="/usr/bin/python3" \
    ansible-galaxy collection install ansible.posix | tee -a /home/opc/ansible-playbook.log

ANSIBLE_PYTHON_INTERPRETER="/usr/bin/python3" ansible-playbook \
    -i /home/opc/ops.ini \
    --extra-vars "@/home/opc/ansible_params.json" \
    /home/opc/ansible_ops/server.yaml | tee -a /home/opc/ansible-playbook.log

rm /home/opc/bootstrap.lock